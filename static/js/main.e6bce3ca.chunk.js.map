{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactList/transitions/pop.module.css","components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","components/App/App.module.css","components/Notification/transitions/slide.module.css","redux/types.js","redux/contacts/contactsReducers.js","redux/rootReducer.js","redux/store.js","components/ContactList/ContactList.jsx","components/ContactList/ContactListContainer.js","redux/contacts/contactsActions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Notification/Notification.jsx","components/Logo/Logo.jsx","components/App/App.jsx","components/App/AppContainer.js","index.js"],"names":["module","exports","initialState","items","filtratedItems","contactExist","contactsReducer","state","action","type","types","every","item","name","toLocaleLowerCase","payload","contact","filter","id","toLowerCase","includes","rootReducer","combineReducers","contacts","contactsReducers","store","createStore","devToolsEnhancer","ContactList","this","props","onDelete","length","TransitionGroup","component","className","styles","list","map","number","CSSTransition","key","timeout","classNames","popTransition","AsYouType","input","button","onClick","Component","connect","dispatch","contactsActions","ContactForm","handleChange","target","setState","value","handleSubmit","e","preventDefault","onAddItem","uuid","clearState","onSubmit","maxLength","placeholder","onChange","required","Filter","onSetFilter","loginInputId","Notification","notificationBox","Logo","in","appear","App","setFilter","onFiltrate","onGetItemsFromStorage","persistedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","container","slideTransition","unmountOnExit","ContactListContainer","ReactDOM","render","AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.e6bce3ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__gqSXO\",\"list\":\"ContactList_list__-RokV\",\"item\":\"ContactList_item__3z15n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__u253h\",\"enterActive\":\"pop_enterActive__PR8lQ\",\"exit\":\"pop_exit__t4BIn\",\"exitActive\":\"pop_exitActive__2evRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__vJRWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationBox\":\"Notification_notificationBox__3I0BF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1LaPt\",\"title\":\"App_title__1jWu0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1gYCy\",\"enterActive\":\"slide_enterActive__3UYrh\",\"exit\":\"slide_exit__2-utf\",\"exitActive\":\"slide_exitActive__ETTpF\"};","export default {\n  ADD_CONTACT: 'ADD_CONTACT',\n  DELETE_CONTACT: 'DELETE_CONTACT',\n  FILTRATE_CONTACTS: 'FILTRATE_CONTACT',\n  GET_ITEMS: 'GET_ITEMS_FROM_STORAGE',\n  SET_FILTER: 'SET_FILTER',\n};\n","import types from '../types';\n\nconst initialState = {\n  items: [],\n  filtratedItems: [],\n  contactExist: false,\n};\n\nconst contactsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADD_CONTACT:\n      if (\n        state.items.every(\n          item =>\n            item.name.toLocaleLowerCase() !==\n            action.payload.contact.name.toLocaleLowerCase(),\n        )\n      ) {\n        return {\n          ...state,\n          contactExist: false,\n          items: [...state.items, action.payload.contact],\n        };\n      }\n      return { ...state, contactExist: true };\n\n    case types.DELETE_CONTACT:\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.payload.id),\n      };\n\n    case types.GET_ITEMS:\n      return { ...state, items: [...action.payload.items] };\n\n    case types.FILTRATE_CONTACTS:\n      return {\n        ...state,\n        filtratedItems: state.items.filter(item =>\n          item.name.toLowerCase().includes(action.payload.filter.toLowerCase()),\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default contactsReducer;\n","import { combineReducers } from 'redux';\nimport contactsReducers from './contacts/contactsReducers';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducers,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AsYouType } from 'libphonenumber-js';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport styles from './ContactList.module.css';\nimport popTransition from './transitions/pop.module.css';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass ContactList extends Component {\n  static propTypes = {\n    filtratedItems: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    onDelete: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { filtratedItems: items, onDelete } = this.props;\n\n    return items.length ? (\n      <TransitionGroup component=\"ul\" className={styles.list}>\n        {items.map(({ name, id, number }) => {\n          return (\n            <CSSTransition key={id} timeout={250} classNames={popTransition}>\n              <li className={styles.item}>\n                <span>\n                  {name} {new AsYouType('US').input(number)}\n                </span>\n                <button\n                  className={styles.button}\n                  type=\"button\"\n                  onClick={() => onDelete(id)}\n                >\n                  &#10006;\n                </button>\n              </li>\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    ) : null;\n  }\n}\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = store => ({\n  filtratedItems: store.contacts.filtratedItems,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsActions.deleteAction(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import types from '../types';\n\nexport const addAction = item => {\n  return {\n    type: types.ADD_CONTACT,\n    payload: {\n      contact: item,\n    },\n  };\n};\n\nexport const deleteAction = id => ({\n  type: types.DELETE_CONTACT,\n  payload: {\n    id,\n  },\n});\n\nexport const getItemsFromLocalStorage = items => ({\n  type: types.GET_ITEMS,\n  payload: {\n    items,\n  },\n});\n\nexport const filtrateContacts = filter => ({\n  type: types.FILTRATE_CONTACTS,\n  payload: {\n    filter,\n  },\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddItem: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({\n      [target.name]: target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.name && this.state.number) {\n      this.props.onAddItem({ ...this.state, id: uuid() });\n    }\n    this.clearState();\n  };\n\n  clearState = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          maxLength=\"36\"\n          placeholder=\"Enter your name...\"\n          onChange={this.handleChange}\n          value={name}\n          required\n        />\n        <input\n          maxLength=\"10\"\n          name=\"number\"\n          type=\"number\"\n          placeholder=\"Enter your number...\"\n          onChange={this.handleChange}\n          value={number}\n          required\n        />\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAddItem: item => dispatch(contactsActions.addAction(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onSetFilter }) => {\n  const loginInputId = uuid();\n\n  return (\n    <form>\n      <h3>Find contact by name</h3>\n      <input\n        onChange={onSetFilter}\n        type=\"text\"\n        name=\"filter\"\n        id={loginInputId}\n        placeholder=\"Enter a name to search...\"\n      />\n    </form>\n  );\n};\n\nFilter.propTypes = {\n  onSetFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport styles from './Notification.module.css';\n\nconst Notification = () => {\n  return <div className={styles.notificationBox}>Contact already exist!</div>;\n};\n\nexport default Notification;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './transitions/logo.css';\n\nconst Logo = () => {\n  return (\n    <CSSTransition in timeout={600} classNames=\"Logo\" appear>\n      <h1>Phonebook</h1>\n    </CSSTransition>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport ContactListContainer from '../ContactList/ContactListContainer';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport Notification from '../Notification/Notification';\nimport styles from './App.module.css';\nimport slideTransition from '../Notification/transitions/slide.module.css';\nimport Logo from '../Logo/Logo';\n\nclass App extends Component {\n  state = {\n    filter: '',\n  };\n\n  static propTypes = {\n    onFiltrate: PropTypes.func.isRequired,\n    onGetItemsFromStorage: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    contactExist: PropTypes.bool.isRequired,\n  };\n\n  componentDidMount() {\n    const { filter } = this.state;\n    const { onFiltrate, onGetItemsFromStorage } = this.props;\n    onFiltrate(filter);\n    const persistedContacts = localStorage.getItem('contacts');\n    if (persistedContacts) {\n      onGetItemsFromStorage(JSON.parse(persistedContacts));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { filter } = this.state;\n    const { onFiltrate, items } = this.props;\n    if (prevProps.items !== items || prevState.filter !== filter) {\n      onFiltrate(filter);\n      localStorage.setItem('contacts', JSON.stringify(items));\n    }\n  }\n\n  setFilter = ({ target }) => {\n    this.setState({\n      filter: target.value,\n    });\n  };\n\n  render() {\n    const { contactExist } = this.props;\n\n    return (\n      <div className={styles.container}>\n        <Logo />\n        <CSSTransition\n          in={contactExist}\n          timeout={1000}\n          classNames={slideTransition}\n          unmountOnExit\n        >\n          <Notification />\n        </CSSTransition>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter onSetFilter={this.setFilter} />\n        <ContactListContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport App from './App';\n\nconst mapDispatchToProps = dispatch => ({\n  onFiltrate: filter => dispatch(contactsActions.filtrateContacts(filter)),\n  onGetItemsFromStorage: items =>\n    dispatch(contactsActions.getItemsFromLocalStorage(items)),\n});\n\nconst mapStateToProps = store => ({\n  items: store.contacts.items,\n  contactExist: store.contacts.contactExist,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport AppContainer from './components/App/AppContainer';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}